@model IEnumerable<WebTracNghiemTiengAnhTHPT.Models.ViewChitietKyThi_2>
@{
    ViewBag.Title = "Cuộc thi";
    Layout = "~/Views/Shared/LayoutWeb.cshtml";
    string rq = Request["PhongThiId"]?.ToString() ?? "";
}

<h2 class="search">Tìm kiếm đề thi</h2>

<div class="container-fluid px-0 mb-3">
    <div class="row">
        <!-- Bảng lọc kết quả bên trái -->
        <div class="col-12 col-md-4 col-lg-3">
            <div class="border rounded p-3">
                <div class="lockq">
                    <span><h4>Lọc Kết Quả</h4></span>
                </div>
                <!-- Lọc theo số câu hỏi -->
                <div class="form-group mb-3">
                    <label><strong>Số câu hỏi</strong></label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="questions10" value="1-10">
                        <label class="form-check-label" for="questions10">1 - 10 câu hỏi</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="questions20" value="10-20">
                        <label class="form-check-label" for="questions20">10 - 20 câu hỏi</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="questions30" value="20-30">
                        <label class="form-check-label" for="questions30">20 - 30 câu hỏi</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="questionsOther" value="other">
                        <label class="form-check-label" for="questionsOther">Kết quả khác</label>
                    </div>
                </div>


                <!-- Lọc theo thời gian thi -->
                <div class="form-group mb-3">
                    <label><strong>Thời gian thi</strong></label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="time15" value="15">
                        <label class="form-check-label" for="time15">15 phút</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="time30" value="30">
                        <label class="form-check-label" for="time30">30 phút</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="time60" value="60">
                        <label class="form-check-label" for="time60">60 phút</label>
                    </div>
                </div>

                <!-- Lọc theo đánh giá -->
                <div class="form-group">
                    <label><strong>Đánh giá</strong></label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="rating4" value="4">
                        <label class="form-check-label" for="rating4">4 sao trở lên</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="rating3" value="3">
                        <label class="form-check-label" for="rating3">3 sao trở lên</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="rating2" value="2">
                        <label class="form-check-label" for="rating2">2 sao trở lên</label>
                    </div>
                </div>
            </div>
        </div>

        <!-- Danh sách kỳ thi bên phải -->
        <div class="col-12 col-md-8 col-lg-9">
            @if (Model != null && Model.Count() > 0)
            {
                <div class="row">
                    @foreach (var item in Model)
                    {
                        if (item.CongKhai == true || !string.IsNullOrEmpty(rq))
                        {
                            <div class="col-12 col-md-6 col-lg-4 mb-4">
                                <div class="card shadow-sm h-100 border-0 rounded-3" data-questions="@item.SoCauHoi" data-time="@item.ThoiGian" data-rating="@item.DiemTrungBinh">
                                    
                                    <div class="card-body">
                                        <!-- Tên kỳ thi -->
                                        <h5 class="card-title text-primary">@Html.DisplayFor(modelItem => item.TenKyThi)</h5>

                                        <!-- Thông tin chi tiết -->
                                        <ul class="list-unstyled mt-3">
                                            <li><strong>Số lượt:</strong> @item.Soluot <img src="~/Content/img/mdi--account-check-outline.svg" class="ms-1" alt="Icon" /></li>
                                            <li><strong>Thời gian:</strong> @item.ThoiGian phút <img src="~/Content/img/mingcute--time-line.svg" class="ms-1" alt="Icon" /></li>
                                            <li><strong>Đánh giá:</strong> @item.DiemTrungBinh <img src="~/Content/img/material-symbols--star-rate.svg" class="ms-1" alt="Icon" /></li>
                                            <li><strong>Số câu hỏi:</strong> @item.SoCauHoi <img src="~/Content/img/ph--question.svg" class="ms-1" alt="Icon" /></li>
                                        </ul>

                                        <!-- Nút Tham gia -->
                                        <div class="d-grid mt-4">
                                            @Html.ActionLink("Tham gia", "ChiTiet", "Contests", new { made = item.MaDe }, new { @class = "btn btn-outline-success btn-block" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            }
            else
            {
                <p class="text-center text-muted">Không có kỳ thi nào</p>
            }
        </div>
    </div>
</div>

<style>
/* General Styles */
h2.text-center {
    font-size: 2rem;
    font-weight: bold;
    color: #007bff;
    margin-bottom: 1.5rem;
}

h3 {
    font-size: 1.8rem;
    font-weight: bold;
    color: #333;
    margin-top: 2rem;
    margin-bottom: 1rem;
    padding-left: 10px;
    border-left: 5px solid #007bff;
}

.contest-title {
    font-size: 1.6rem;
    font-weight: bold;
    color: #2c3e50;
    margin-bottom: 1rem;
    transition: color 0.3s ease;
}

.contest-title:hover {
    color: #007bff;
}

.contest-card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: transform 0.2s ease, box-shadow 0.3s ease;
}

.contest-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.contest-detail {
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    color: #34495e;
}

.contest-detail img {
    width: 20px;
    height: 20px;
    margin-right: 5px;
}

.btn-outline-success {
    margin-top: auto;
    font-size: 1rem;
    padding: 10px 20px;
    border-color: #007bff;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.btn-outline-success:hover {
    background-color: #007bff;
    border-color: #007bff;
    color: white;
}

/* Responsive Adjustments */
@@media (max-width: 768px) {
    .contest-card {
        margin: 10px 0;
    }

    h2.text-center {
        font-size: 1.5rem;
    }

    h3 {
        font-size: 1.4rem;
    }


    .btn.btn-outline-success {
        background: linear-gradient(90.57deg, rgb(62, 101, 254) 0%, rgb(210, 60, 255) 100%);
    }

    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.2);
        }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .btn-outline-success {
        border-width: 2px;
    }
    .col-12.col-md-4.col-lg-3{  
        background-color: #e0f6fb;
         padding: 20px; 
         border: none !important;
    }

    .contest-title {
        font-size: 1.4rem;
    }
}
</style>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const filters = {
            questions: [], // Bộ lọc khoảng số câu hỏi
            time: [],      // Bộ lọc thời gian
            rating: []     // Bộ lọc đánh giá
        };

        // Cập nhật bộ lọc khi checkbox thay đổi
        const updateFilters = (category, value, isChecked) => {
            if (isChecked) {
                filters[category].push(value);
            } else {
                const index = filters[category].indexOf(value);
                if (index > -1) {
                    filters[category].splice(index, 1);
                }
            }
            applyFilters();
        };

        // Hàm kiểm tra khoảng số câu hỏi
        const matchesQuestionsRange = (questions, ranges) => {
            let isInRange = false;
            let hasOther = false;

            ranges.forEach(range => {
                if (range === "other") {
                    hasOther = true; // Nếu chọn "Kết quả khác"
                } else {
                    const [min, max] = range.split("-").map(Number); // Tách khoảng min-max
                    if (questions >= min && questions <= max) {
                        isInRange = true; // Kiểm tra nếu nằm trong khoảng
                    }
                }
            });

            // Nếu có "Kết quả khác" và không thuộc các khoảng khác, trả về true
            return (hasOther && !isInRange) || (!hasOther && isInRange);
        };

        // Áp dụng bộ lọc để hiển thị/ẩn các kỳ thi
        const applyFilters = () => {
            document.querySelectorAll(".card").forEach(card => {
                const questions = parseInt(card.dataset.questions, 10);
                const time = parseInt(card.dataset.time, 10);
                const rating = parseFloat(card.dataset.rating);

                const matchesQuestions = !filters.questions.length || matchesQuestionsRange(questions, filters.questions);
                const matchesTime = !filters.time.length || filters.time.includes(time);
                const matchesRating = !filters.rating.length || filters.rating.some(r => rating >= r);

                if (matchesQuestions && matchesTime && matchesRating) {
                    card.style.display = "block"; // Hiển thị nếu phù hợp
                } else {
                    card.style.display = "none"; // Ẩn nếu không phù hợp
                }
            });
        };

        // Lắng nghe sự kiện thay đổi trên các checkbox
        document.querySelectorAll(".form-check-input").forEach(checkbox => {
            checkbox.addEventListener("change", (e) => {
                const { id, checked } = e.target;
                const category = id.startsWith("questions") ? "questions"
                    : id.startsWith("time") ? "time"
                        : "rating";

                const value = category === "questions" ? e.target.value // Giữ nguyên giá trị cho khoảng
                    : category === "rating" ? parseFloat(e.target.value)
                        : parseInt(e.target.value, 10);
                updateFilters(category, value, checked);
            });
        });
    });

</script>
