@model WebTracNghiemTiengAnhTHPT.Models.CauHoi

@{
    ViewBag.Title = "Chỉnh sửa câu hỏi";
    Layout = "~/Areas/admin/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/Scripts/tinymce/tinymce.min.js" referrerpolicy="origin"></script>

<script>
    tinymce.init({
        selector: 'textarea',
        plugins: 'media code',
        toolbar: 'undo redo | link media | code',
        media_title: true,
        automatic_uploads: true,
        media_upload_url: '/giaovien/QuanLyDeThi/UploadAudio',  // Update this URL to match your route
        file_picker_types: 'media',
        file_picker_callback: (cb, value, meta) => {
            const input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'audio/*');

            input.addEventListener('change', (e) => {
                const file = e.target.files[0];
                const formData = new FormData();
                formData.append('audioFile', file);

                fetch('/giaovien/QuanLyDeThi/UploadAudio', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.location) {
                            cb(data.location, { title: file.name });
                        } else {
                            console.error('Upload failed:', data.error);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });

            input.click();
        },
        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'
    });
</script>


<h2>Chỉnh sửa câu hỏi</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-group">
    @Html.Label("Nội dung")
    @Html.TextArea("NoiDung", HttpUtility.HtmlDecode(Model.NoiDung), new { @class = "form-control", rows = 2 })

    @Html.ValidationMessageFor(m => m.NoiDung)
</div>

    <div class="form-group">
        @Html.Label("Đáp án A")
        @Html.TextBoxFor(m => m.DapAnA, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DapAnA)
    </div>

    <div class="form-group">
        @Html.Label("Đáp án B")
        @Html.TextBoxFor(m => m.DapAnB, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DapAnB)
    </div>

    <div class="form-group">
        @Html.Label("Đáp án C")
        @Html.TextBoxFor(m => m.DapAnC, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DapAnC)
    </div>

    <div class="form-group">
        @Html.Label("Đáp án D")
        @Html.TextBoxFor(m => m.DapAnD, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DapAnD)
    </div>

    <div class="form-group">
        @Html.Label("Đáp án chính xác")
        @Html.DropDownList("DapAnChinhXac", new SelectList(new[] { "A", "B", "C", "D" }, Model.DapAnChinhXac), new { @class = "form-control" })
        @Html.ValidationMessage("DapAnChinhXac")
    </div>

    <div class="form-group">
        @Html.Label("Mã nhóm")
        @Html.DropDownListFor(m => m.MaNhom, (IEnumerable<SelectListItem>)ViewBag.NhomList, new { @class = "form-control" })
        @Html.ValidationMessage("MaNhom")
    </div>


    <div class="form-group">
        @Html.Label("Mức độ")
        @Html.DropDownList("MucDo", new SelectList(new[] {
            new { Value = "1", Text = "Dễ" },
            new { Value = "2", Text = "Trung bình" },
            new { Value = "3", Text = "Khó" }
        }, "Value", "Text", Model.MucDo), new { @class = "form-control" })
        @Html.ValidationMessage("MucDo")
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
        <a href="@Url.Action("Index", "QuanLyCauHoi")" class="btn btn-secondary">Hủy</a>
    </div>
}
