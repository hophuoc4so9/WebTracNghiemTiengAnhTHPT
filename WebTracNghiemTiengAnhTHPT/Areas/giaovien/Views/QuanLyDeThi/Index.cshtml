@model IEnumerable<WebTracNghiemTiengAnhTHPT.Models.KyThi>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Quản Lý Đề Thi</h2>



<!-- Single Save Button -->
<button type="button" class="btn btn-success btn-sm" onclick="saveAllChanges()">Save All</button>

@using (Html.BeginForm("Upload", "QuanLyDeThi", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="file" name="file" accept=".pdf,.doc,.docx" />
    <input type="submit" value="Thêm mới đề thi" />
}

<!-- Bootstrap Grid Layout -->
<form class="kyThi-form" action="@Url.Action("Update", "QuanLyDeThi")" method="post">
    <div class="container">
        <div class="row">
            <!-- Title Row -->
            <div class="col"><strong>Tên đề thi</strong></div>
            <div class="col"><strong>Thời gian</strong></div>
            <div class="col"><strong>Thời gian bắt đầu</strong></div>
            <div class="col"><strong>Thời gian kết thúc</strong></div>
            <div class="col"><strong>Công khai</strong></div>

            <div class="col"><strong>Hoạt động</strong></div>
        </div>

        @foreach (var item in Model)
        {
            if (item.isDeleted == true)
            {
                continue;
            }

            <div class="row align-items-center kyThi-row" data-id="@item.MaDe">
                <div class="col">

                    <span class="text-display">@item.TenKyThi</span>
                    <input type="text" name="KyThi[@item.MaDe].TenKyThi" class="form-control edit-input" value="@item.TenKyThi" style="display:none;" />
                </div>
                <div class="col">
                    <span class="text-display">@item.ThoiGian</span>
                    <input type="number" min="10" name="KyThi[@item.MaDe].ThoiGian" class="form-control edit-input" value="@item.ThoiGian" style="display:none;" />
                </div>
                <div class="col">
                    @if (item.ThoiGianBatDau != null)
                    {
                        <span class="text-display">@String.Format("{0:dd-MM-yyyy HH:mm}", item.ThoiGianBatDau)</span>
                    }
                    else
                    {
                        <span class="text-display">Chưa có thời gian bắt dầu</span>
                    }

                    <input name="KyThi[@item.MaDe].ThoiGianBatDau" type="datetime-local" class="form-control edit-input" value="@String.Format("{0:yyyy-MM-ddTHH:mm}", item.ThoiGianBatDau)" />

                </div>
                <div class="col">
                    @if (item.ThoiGianKetThuc != null)
                    {
                        <span class="text-display">@String.Format("{0:dd-MM-yyyy HH:mm}", item.ThoiGianKetThuc)</span>
                    }
                    else
                    {
                        <span class="text-display">Chưa có thời gian kết thúc</span>
                    }
                    <input name="KyThi[@item.MaDe].ThoiGianKetThuc" type="datetime-local" class="form-control edit-input" value="@String.Format("{0:yyyy-MM-ddTHH:mm}", item.ThoiGianBatDau)" />

                </div>
                <div class="col">

                    <input type="checkbox" name="KyThi[@item.MaDe].CongKhai" class="edit-input" @(item.CongKhai ? "checked" : "") style="display:none;" />
                    <span class="text-display">@item.CongKhai</span>

                </div>
                <div style="display:none;">
                    <input type="hidden" name="KyThi[@item.MaDe].MaDe" value="@item.MaDe" />
                    <input type="hidden" name="KyThi[@item.MaDe].isDeleted" value="@item.isDeleted" class="isDeleted-input" />
                </div>
                <div class="col">
                    <button type="button" class="btn btn-primary btn-sm edit-btn" onclick="toggleEdit(this)">Sửa</button>
                    <button type="button" class="btn btn-danger btn-sm delete-btn" onclick="deleteItem(this)">Xóa</button>
                    @Html.ActionLink("Chi tiết", "ChiTietDeThi", "QuanLyDeThi", new { made = item.MaDe }, new { @class = "btn btn-info btn-sm " })

                </div>
            </div>
        }
    </div>
</form>

<script>
    // Toggle edit inputs
    function toggleEdit(button) {
        var row = $(button).closest(".row");
        row.find(".text-display").toggle(); // Toggle text display
        row.find(".edit-input").toggle(); // Toggle inputs
        $(button).toggle(); // Toggle Edit button
    }

    // Delete item (set isDeleted to true and hide the row)
    function deleteItem(button) {
        var row = $(button).closest(".kyThi-row");
        var isDeletedInput = row.find(".isDeleted-input");

        // Confirmation alert
        if (confirm("Bạn chắc chắn muốn xóa mục này?")) {
            // Set isDeleted to true
            isDeletedInput.val("true");

            // Hide the row visually
            row.hide();
        }
    }

    // Save all changes function
    function saveAllChanges() {
        var forms = $('.kyThi-form');
        var isValid = true;

        forms.find('.kyThi-row').each(function () {
            var row = $(this);
            var thoiGian = parseInt(row.find('input[name*="ThoiGian"]').val()) || 0;

            var thoiGianBatDauDate = new Date(row.find('input[name*="ThoiGianBatDauDate"]').val() + "T" + (row.find('input[name*="ThoiGianBatDauTime"]').val() || "00:00"));
            var thoiGianKetThucDate = new Date(row.find('input[name*="ThoiGianKetThucDate"]').val() + "T" + (row.find('input[name*="ThoiGianKetThucTime"]').val() || "00:00"));
            var expectedEndTime = new Date(thoiGianBatDauDate.getTime() + thoiGian * 60000);

            if (thoiGianKetThucDate < expectedEndTime) {
                alert("Thời gian kết thúc không hợp lệ cho mục này. Vui lòng kiểm tra lại.");
                isValid = false;
                return false;
            }
        });

        if (isValid) {
            forms.submit();
        }
    }
</script>
<style>
    /* Column Styling - Space Elements Evenly */
    .kyThi-row .col {
        display: flex;
        align-items: center;
        justify-content: space-between; /* Space elements evenly */
        padding: 5px;
    }

    .col > button {
        margin-right: 5px;
    }
    /* Adjustments for Text Display */
    .text-display {
        padding-right: 10px; /* Optional spacing between text and input */
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .kyThi-row .col {
            flex-direction: column; /* Stack elements on smaller screens */
            align-items: flex-start;
        }
    }

    /* Container Styling */
    .kyThi-form {
        padding: 20px;
        background-color: #ffffff; /* White background for clean look */
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05); /* Light shadow for depth */
        margin-top: 20px;
    }

    /* Row Styling */
    .kyThi-row {
        padding: 10px 0;
        border-bottom: 1px solid #ddd; /* Divider between rows */
        transition: background-color 0.3s ease;
    }

        .kyThi-row:hover {
            background-color: #f1f1f1; /* Slight hover effect on row */
        }

        /* Column Styling */
        .kyThi-row .col {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            padding: 5px;
        }

    /* Title Row Styling */
    .kyThi-form .row strong {
        font-size: 14px;
        color: #333;
        font-weight: 600;
    }

    /* Text Display */
    .text-display {
        display: inline-block;
        padding: 5px 10px;
        min-width: 150px;
        color: #555;
        font-weight: 500;
    }

    /* Input Styling */
    .edit-input {
        display: none; /* Hidden by default */
        padding: 5px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        transition: border-color 0.2s ease-in-out;
        font-size: 14px;
    }

        .edit-input:focus {
            border-color: #80bdff;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25); /* Soft glow effect when focused */
        }

    /* Button Styling */
    button {
        border-radius: 5px;
        transition: background-color 0.3s ease, transform 0.2s ease;
        padding: 5px 15px;
    }

    /* Edit and Delete Buttons */
    .btn-primary.edit-btn {
        background-color: #007bff;
        border-color: #007bff;
        color: #fff;
    }

        .btn-primary.edit-btn:hover {
            background-color: #0056b3;
            transform: translateY(-2px); /* Slight lift on hover */
        }

    .btn-danger.delete-btn {
        background-color: #dc3545;
        border-color: #dc3545;
        color: #fff;
    }

        .btn-danger.delete-btn:hover {
            background-color: #c82333;
            transform: translateY(-2px);
        }

    /* Success Button */
    .btn-outline-success {
        border-color: #28a745;
        color: #28a745;
    }

        .btn-outline-success:hover {
            background-color: #28a745;
            color: #fff;
        }

    /* Save Button Styling */
    .btn-success.btn-sm {
        margin: 10px 0;
        padding: 5px 15px;
    }

        .btn-success.btn-sm:hover {
            background-color: #218838;
        }

    /* Checkbox Styling */
    input[type="checkbox"] {
        width: 16px;
        height: 16px;
        accent-color: #28a745;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .kyThi-row .col {
            flex-basis: 100%;
            text-align: left;
            padding: 10px 0;
        }

        .kyThi-form {
            padding: 10px;
        }
    }
</style>
