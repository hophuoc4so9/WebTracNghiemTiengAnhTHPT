@model IEnumerable<WebTracNghiemTiengAnhTHPT.Models.CauHoi>
@using System.Linq
@{
    ViewBag.Title = "ChiTietDeThi";
    Layout = "~/Areas/admin/Views/Shared/_AdminLayout.cshtml";
    var groupedItems = Model.GroupBy(item => new { item.NhomCauHoi.MaNhom, item.NhomCauHoi.NoiDung });
    WebTracNghiemTiengAnhTHPT.Models.KyThi kyThi = (WebTracNghiemTiengAnhTHPT.Models.KyThi)ViewBag.KyThi;
    int totalQuestions = Model.Count();
    List<WebTracNghiemTiengAnhTHPT.Models.DangBai> dangBais = ViewBag.dangBais;
    var classList = new List<SelectListItem>
{
        new SelectListItem { Text = "Lớp 10", Value = "Lớp 10" },
        new SelectListItem { Text = "Lớp 11", Value = "Lớp 11" },
        new SelectListItem { Text = "Lớp 12", Value = "Lớp 12" }
    };

    var examTypeList = new List<SelectListItem>
{
        new SelectListItem { Text = "Friends Global", Value = "Friends Global" },
        new SelectListItem { Text = "Global Success", Value = "Global Success" },
        new SelectListItem { Text = "Smart World", Value = "Smart World" }
    };

    var selectedClass = ViewBag.Currenclass as string;
    var selectedExamType = ViewBag.CurrenBoSach as string;
}
<script src="~/Scripts/tinymce/tinymce.min.js" referrerpolicy="origin"></script>

<script>
    tinymce.init({
        selector: 'textarea',
        plugins: 'media code',
        toolbar: 'undo redo | link media | code',
        media_title: true,
        automatic_uploads: true,
        media_upload_url: '/giaovien/QuanLyDeThi/UploadAudio',  // Update this URL to match your route
        file_picker_types: 'media',
        file_picker_callback: (cb, value, meta) => {
            const input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'audio/*');

            input.addEventListener('change', (e) => {
                const file = e.target.files[0];
                const formData = new FormData();
                formData.append('audioFile', file);

                fetch('/giaovien/QuanLyDeThi/UploadAudio', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.location) {
                            cb(data.location, { title: file.name });
                        } else {
                            console.error('Upload failed:', data.error);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });

            input.click();
        },
        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'
    });
</script>




<div>
    <h3>
        Danh sách câu hỏi khác
        <button type="button" class="btn btn-secondary" onclick="toggleTable()">Ẩn/Hiện</button>
    </h3>
    <div>
        <table id="otherQuestionsTable" class="table table-bordered" style="display: none; width: 100%; overflow-x: auto;">
            <thead>
                <tr>
                    <th>Thao Tác</th>
                    <th>Mã Câu Hỏi</th>
                    <th>Câu Hỏi</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in ViewBag.OtherQuestions as List<WebTracNghiemTiengAnhTHPT.Models.CauHoi>)
                {
                    <tr>
                        <td>
                            @using (Html.BeginForm("AddQuestionToExam", "QuanLyDeThi", FormMethod.Post))
                            {
                                @Html.Hidden("made", (int)ViewBag.made)
                                @Html.Hidden("maCauHoi", item.MaCauHoi)
                                <button type="submit" class="btn btn-primary">Thêm</button>
                            }
                        </td>
                        <td>@item.MaCauHoi</td>
                        <td>@item.NoiDung</td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function toggleTable() {
        var table = document.getElementById('otherQuestionsTable');
        if (table.style.display === 'none' || table.style.display === '') {
            table.style.display = 'inline-block';
        } else {
            table.style.display = 'none';
        }
    }
</script>

<style>
    #otherQuestionsTable {
        width: 100%;
        overflow-x: auto;
    }

        #otherQuestionsTable th, #otherQuestionsTable td {
            word-wrap: break-word;
        }
</style>

<script>
    function toggleTable() {
        var table = document.getElementById('otherQuestionsTable');
        if (table.style.display === 'none' || table.style.display === '') {
            table.style.display = 'inline-block';
        } else {
            table.style.display = 'none';
        }
    }
</script>


<div class="">
    @using (Html.BeginForm("LuuThayDoi", "QuanLyDeThi", new { made = ViewBag.made }, FormMethod.Post))
    {
        <h2>Tên đề thi: @kyThi.TenKyThi </h2>
        <h3>Tổng số câu hỏi: @totalQuestions </h3>
        <h3>
            Số câu hỏi kiểm tra:
            <input type="number" min="1" max="@totalQuestions" name="KyThi[@ViewBag.made].SoCauHoi"
                   class="form-control edit-input"
                   value="@(kyThi.SoCauHoi.HasValue && kyThi.SoCauHoi.Value > 0 ? kyThi.SoCauHoi.Value : totalQuestions)" />
        </h3>
        <h3>
            Thời gian làm bài:
            <input type="number" min="10" name="KyThi[@ViewBag.made].ThoiGian" class="form-control edit-input" value="@kyThi.ThoiGian" />
        </h3>



        <h3>
            Lớp:
            @Html.DropDownList("Class", new SelectList(classList, "Value", "Text", selectedClass), "Chọn lớp", new { @class = "form-control" })
        </h3>
        <h3>
            Bộ sách:
            @Html.DropDownList("ExamType", new SelectList(examTypeList, "Value", "Text", selectedExamType), "Chọn bộ sách", new { @class = "form-control" })
        </h3>
        foreach (var group in groupedItems)
        {
            @Html.TextArea("NoiDung_Nhom" + group.Key.MaNhom, HttpUtility.HtmlDecode(group.Key.NoiDung), new { @class = "form-control mytextarea", style = "width: 100%;" })

            foreach (var item in group)
            {
                <div class="item-container border p-3 mb-3">
                    <div class="field mb-2">
                        @item.MaCauHoi :
                        @Html.TextArea("NoiDung_CauHoi" + item.MaCauHoi, HttpUtility.HtmlDecode(item.NoiDung), new { @class = "form-control mytextarea", style = "width: 100%;" })
                        <button type="submit" name="action" value="delete_@item.MaCauHoi" class="btn btn-danger">Xóa câu hỏi khỏi đề thi</button>
                    </div>

                    <!-- Answer choices with radio buttons -->
                    <label class="form-check-label bg-info w-100 my-1 border-danger border-2" for="dapAnA_@item.MaCauHoi">
                        <span class="form-check mb-2">
                            <input @(item.DapAnChinhXac == "A" ? "checked" : "") class="form-check-input" type="radio" name="answer_@item.MaCauHoi" id="dapAnA_@item.MaCauHoi" value="A">
                            @Html.DisplayFor(modelItem => item.DapAnA)
                        </span>
                    </label>
                    <label class="form-check-label bg-info w-100 my-1" for="dapAnB_@item.MaCauHoi">
                        <span class="form-check mb-2">
                            <input @(item.DapAnChinhXac == "B" ? "checked" : "") class="form-check-input" type="radio" name="answer_@item.MaCauHoi" id="dapAnB_@item.MaCauHoi" value="B">
                            @Html.DisplayFor(modelItem => item.DapAnB)
                        </span>
                    </label>
                    <label class="form-check-label bg-info w-100 my-1" for="dapAnC_@item.MaCauHoi">
                        <span class="form-check mb-2">
                            <input @(item.DapAnChinhXac == "C" ? "checked" : "") class="form-check-input" type="radio" name="answer_@item.MaCauHoi" id="dapAnC_@item.MaCauHoi" value="C">
                            @Html.DisplayFor(modelItem => item.DapAnC)
                        </span>
                    </label>
                    <label class="form-check-label bg-info w-100 my-1" for="dapAnD_@item.MaCauHoi">
                        <span class="form-check mb-2">
                            <input @(item.DapAnChinhXac == "D" ? "checked" : "") class="form-check-input" type="radio" name="answer_@item.MaCauHoi" id="dapAnD_@item.MaCauHoi" value="D">
                            @Html.DisplayFor(modelItem => item.DapAnD)
                        </span>
                    </label>
                    <div id="partialDangBaiContainer">
                        @Html.Action("PartialDangBai", new { id = item.MaCauHoi })
                    </div>
                </div>
            }
        }
        <button type="submit" class="btn btn-success">Lưu</button>
    }
</div>
